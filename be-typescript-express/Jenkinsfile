def odsNamespace = env.ODS_NAMESPACE ?: 'ods'
def odsGitRef = env.ODS_GIT_REF ?: 'master'
def odsImageTag = env.ODS_IMAGE_TAG ?: 'latest'

library("ods-jenkins-shared-library@${odsGitRef}")

odsQuickstarterPipeline(
  imageStreamTag: "${odsNamespace}/jenkins-slave-nodejs10-angular:${odsImageTag}",
) { context ->

  stage("init Project") {
    dir("$context.targetDir") {
      print "Generate package json"
      sh "npm init -y"

      print "Install dependencies"
      def typescriptVersion = "3.9.5"
      def nodeTypeVersion = "14.0.13"
      def expressVersion = "4.17.1"
      def jestVersion = "26.0.0"
      def jestJunitVersion = "10.0.0"

      sh "npm i typescript@$typescriptVersion express@$expressVersion @types/node@$nodeTypeVersion jest@$jestVersion @types/jest@$jestVersion"
      sh "npm i jest-junit@$jestJunitVersion --save-dev"

      print "Generate ts config file. Skip library check and redirect transpiled ts files to dist folder."
      print "Target 10.0.0 and newer versions. Tell the compiler its okay to output JS syntax features from ES2018."
      sh "npx tsc --init --lib 'es2018' --target 'es2018' --skipLibCheck --outDir './dist'"

      print "Modify script commands in package json file"
      sh "python $env.WORKSPACE/$context.sourceDir/add-to-package-json.py ./package.json"
    }
  }

  odsQuickstarterStageCopyFiles(context)

  odsQuickstarterStageCreateOpenShiftResources(
    context,
    [directory: 'common/ocp-config/component-environment']
  )
  odsQuickstarterStageRenderJenkinsfile(context)

  odsQuickstarterStageRenderSonarProperties(context)
}
