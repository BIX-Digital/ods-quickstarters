daemon off;

# By following OpenShift convention you just need to provide here the names of your services.
# For example, if you want to route/proxy to only one service/deployment named "my-cool-app" then
# just replace "YOUR_APP" by "MY_COOL_APP" and keep the suffixes.
env YOUR_APP_SERVICE_HOST;
env YOUR_APP_SERVICE_PORT;
env SESSION_SECRET;

worker_processes auto;

events {
    worker_connections  1024;
}

# https://openresty-reference.readthedocs.io/en/latest/Directives/
http {
    # Lua configurations
    lua_package_path    '/usr/local/openresty/lualib/?.lua;;';
    lua_ssl_verify_depth 2;
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    error_log /dev/stdout warn;
    access_log /dev/stdout main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    # https://nginx.org/en/docs/http/ngx_http_gzip_module.html
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types "*";
    gzip_disable "msie6";

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 180m;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header x-xss-protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    # add_header Content-Security-Policy "default-src 'none'; script-src 'none'; img-src 'none' data:; style-src 'none' 'unsafe-inline'; font-src 'none' data:; frame-src 'none'; connect-src 'none' https://apis.google.com; object-src 'none' ";

    server {
        listen  8080   default_server;
        listen  [::]:8080   default_server;

        server_name _;

        client_max_body_size 50M;
        client_body_buffer_size 50M;

        set_by_lua $your_app_service_host 'return os.getenv("YOUR_APP_SERVICE_HOST")';
        set_by_lua $your_app_service_port 'return os.getenv("YOUR_APP_SERVICE_PORT")';

        # There is a bug I found with sessions not sticking properly and causing spontaneous 403's
        # For now, set the session secret hard-coded
        set_by_lua $session_secret 'return os.getenv("SESSION_SECRET")';

        # modifying HTTP server signature header
        # more_set_headers "Server: Your App";
        # server_tokens off;

        # disable cache
        # expires 0;
        # add_header Cache-Control private;

        # redirect server error pages to the static page /50x.html
        error_page   500 501 502 503 504  /50x.html;

        location / {
            include "/usr/local/openresty/nginx/resolver.conf";
            # access_by_lua_block {
            #     require("your-auth-service").authenticate()
            # }
            proxy_pass http://$your_app_service_host:$your_app_service_port;
        }

        error_page  404 /index.html;
        # redirect server error pages to the static page /50x.html
        location = /50x.html {
            # you could send back JSON messages (see the README and lua/server-error.lua)
            root   html;
        }
    }
}
