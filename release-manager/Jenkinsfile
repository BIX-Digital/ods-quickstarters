// build params
def odsImageTag = env.ODS_IMAGE_TAG ?: 'latest'
def odsGitRef = env.ODS_GIT_REF ?: 'production'
def projectId = env.PROJECT_ID
def componentId = env.COMPONENT_ID.toLowerCase()
def packageName = env.PACKAGE_NAME
def gitUrlHttp = env.GIT_URL_HTTP
def group = env.GROUP_ID

def credentialsId = "${projectId}-cd-cd-user-with-password"
def quickstarterBasepath = "release-manager"
def dockerRegistry
def gitHost
def bitbucketUrl

// vars from jenkins master
node {
  dockerRegistry = env.DOCKER_REGISTRY
  gitHost =  env.BITBUCKET_HOST.split(":")[0]
}

def conts = containerTemplate( 
  name: 'jnlp',
  image: "${dockerRegistry}/cd/jenkins-slave-base:${odsImageTag}",
  workingDir: '/tmp',
  alwaysPullImage: true,
  args: ''
)

def podLabel = "quickstarter-${quickstarterBasepath}-${projectId}-${componentId}"

podTemplate(
  label: podLabel,
  cloud: 'openshift',
  containers: [conts],
  volumes: [],
  serviceAccount: 'jenkins'
) {
  node(podLabel) {

    stage('Checkout quickstarter') {
      checkout scm
      def useHttps = sh(
        returnStdout: true,
        script: 'git config remote.origin.url'
      ).trim().startsWith("https");
      def bitbucketScheme = useHttps ? 'https://' : 'http://'
      bitbucketUrl = bitbucketScheme + gitHost
    }

    stage("initialize target folder ${componentId}") {
      sh "mkdir -p ${componentId}"
    }

    stage('copy files from quickstart to generated project') {
      sh "cp -rv ${quickstarterBasepath}/files/. ${componentId}"
    }

    stage('configure metadata.yml') {
      sh "sed 's|@project_id@|'${projectId}'|g' ${quickstarterBasepath}/metadata.yml.tmpl > ${componentId}/metadata.yml"
    }

    stage('Setup OpenShift resources') {
      dir(quickstarterBasepath) {
        sh "sh ./create-ocp-resources.sh -p ${projectId} -c ${componentId} -r ${bitbucketUrl}/scm"
      }
    }

    stage('Push to remote') {
      withCredentials([usernamePassword(credentialsId: credentialsId, passwordVariable: 'pass', usernameVariable: 'user')]) {
        writeFile file: "/home/jenkins/.netrc", text: "machine ${gitHost} login ${user} password ${pass}"
      }
      sh "sh common/scripts/git_push.sh --dir ${componentId} --url ${gitUrlHttp}"
    }

  }
}






