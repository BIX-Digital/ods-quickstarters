/* generated jenkins file used for building and deploying @component_id@ in projects @project_id@ */
def final projectId = '@project_id@'
def final componentId = '@component_id@'
def final credentialsId = "${projectId}-cd-cd-user-with-password"
def dockerRegistry
node {
  dockerRegistry = env.DOCKER_REGISTRY
}

@Library('ods-jenkins-shared-library@@ods_git_ref@') _

/*
  See readme of shared library for usage and customization
  @ https://github.com/opendevstack/ods-jenkins-shared-library/blob/master/README.md
  eg. to create and set your own builder slave instead of 
  the node js slave used here - the code of the slave can be found at
  https://github.com/opendevstack/ods-quickstarters/tree/master/common/jenkins-slaves/nodejs10-angular
 */ 
odsPipeline(
  image: "${dockerRegistry}/cd/jenkins-slave-nodejs10-angular:@ods_image_tag@",
  projectId: projectId,
  componentId: componentId,
  branchToEnvironmentMapping: [
    'master': 'test',
    '*': 'dev'
  ]
) { context ->
  stageTest(context)
}

def stageTest(def context) {

  def openShiftPublicHost
  node {
    def stableUrl = env.SONAR_SERVER_URL
    openShiftPublicHost = stableUrl.substring(stableUrl.indexOf(".") + 1)
  }
  
  stage('Integration Test') {
    withEnv(["TAGVERSION=${context.tagversion}", "NEXUS_HOST=${context.nexusHost}","OPENSHIFT_PROJECT=${context.targetProject}","OPENSHIFT_PUBLIC_HOST=${openShiftPublicHost}"]) {
      sh "npm install"
      sh "npm run lint"
      sh "npm run build"
    }
  }
}
