/* generated jenkins file used for building and deploying @component_id@ in projects @project_id@ */
def final projectId = '@project_id@'
def final componentId = '@component_id@'
def final credentialsId = "${projectId}-cd-cd-user-with-password"
def sharedLibraryRepository
def dockerRegistry
node {
  sharedLibraryRepository = env.SHARED_LIBRARY_REPOSITORY
  dockerRegistry = env.DOCKER_REGISTRY
}

@Library('ods-jenkins-shared-library@@ods_git_ref@') _

/*
  See readme of shared library for usage and customization
  @ https://github.com/opendevstack/ods-jenkins-shared-library/blob/master/README.md
  eg. to create and set your own builder slave instead of 
  the scala/sbt slave used here - the code of the sbt slave can be found at
  https://github.com/opendevstack/ods-quickstarters/tree/master/common/jenkins-slaves/scala
 */ 
odsPipeline(
  image: "${dockerRegistry}/cd/jenkins-slave-scala:@ods_image_tag@",
  projectId: projectId,
  componentId: componentId,
  branchToEnvironmentMapping: [
    'master': 'test',
    '*': 'dev'
  ]
) { context ->
  stageBuild(context)
  stageScanForSonarqube(context)
  stageStartOpenshiftBuild(context)
  stageDeployToOpenshift(context)
}

def stageBuild(def context) {
  stage('Build and Unit Test') {
    withEnv(["TAGVERSION=${context.tagversion}"]){
      sh "sbt test"
    }
    sh "sbt assembly"
  }
}
